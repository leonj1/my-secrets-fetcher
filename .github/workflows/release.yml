name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run tests
      run: dotnet test --configuration Release --verbosity normal
      
    - name: Build Windows binary
      run: |
        cd src/SecretsManager
        dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o ../../dist/windows
        
    - name: Build Linux binary
      run: |
        cd src/SecretsManager
        dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o ../../dist/linux
        
    - name: Build macOS Intel binary
      run: |
        cd src/SecretsManager
        dotnet publish -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true -o ../../dist/macos-intel
        
    - name: Build macOS ARM binary
      run: |
        cd src/SecretsManager
        dotnet publish -c Release -r osx-arm64 --self-contained true -p:PublishSingleFile=true -o ../../dist/macos-arm
        
    - name: Create release archives
      run: |
        cd dist
        # Create Windows archive
        cd windows && zip -r ../SecretsManager-windows-x64.zip . && cd ..
        # Create Linux archive
        cd linux && tar -czf ../SecretsManager-linux-x64.tar.gz . && cd ..
        # Create macOS Intel archive
        cd macos-intel && tar -czf ../SecretsManager-macos-intel-x64.tar.gz . && cd ..
        # Create macOS ARM archive
        cd macos-arm && tar -czf ../SecretsManager-macos-arm64.tar.gz . && cd ..
        
    - name: Generate release tag
      id: tag
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag=v$(date +'%Y.%m.%d')-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release and Upload Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="${{ steps.tag.outputs.tag }}"
        
        # Create release
        gh release create "$TAG" \
          --title "Release $TAG" \
          --notes "## Changes
        - Automated release from commit ${{ github.sha }}
        
        ## Downloads
        - **Windows**: SecretsManager-windows-x64.zip
        - **Linux**: SecretsManager-linux-x64.tar.gz  
        - **macOS Intel**: SecretsManager-macos-intel-x64.tar.gz
        - **macOS ARM**: SecretsManager-macos-arm64.tar.gz" \
          ./dist/SecretsManager-windows-x64.zip \
          ./dist/SecretsManager-linux-x64.tar.gz \
          ./dist/SecretsManager-macos-intel-x64.tar.gz \
          ./dist/SecretsManager-macos-arm64.tar.gz
